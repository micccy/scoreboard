                .org   (PC + ((0 - (PC & $7F)) & $7F))  ;align to the next 256 word boundary

load_flash:

mask_bank:      .db     $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF

ubmp_bank:      .db     $C0,$F9,$A4,$B0,$99,$92,$82,$F8,$80,$90,$88,$83,$C6,$A1,$86,$8E

dbmp_bank:      .db     $C0,$F9,$A4,$B0,$99,$92,$82,$F8,$80,$90,$88,$83,$C6,$A1,$86,$8E

vbmp_bank:      .db     $FF,$F9,$A4,$B0,$99,$92,$82,$F8,$80,$90,$40,$79,$24,$30,$19,$12,$02,$78,$00,$10

;
;    BMP:
;
;        0
;    5       1
;        6
;    4       2
;        3
;
;    active LOW (0 = ON, 1 = OFF)
;    (bit 7 set to 1 = OFF)
;


rec_bank:       .db     $00,$00,$00,$00,$00,$00     ;Set initial values to zero
time_bank:      .db     $00,$00,$00,$00,$00,$00     ;

boot_iter_bank: .dw     BOTLOOP*2+1                 ;Number of iterations before changing boot time test output
boot_val_bank:  .db     $FF,$00                     ;Next Y data output during boot time test

                ;End of flash section loaded in sram at startup - check size
load_flash_end:
                .if     ((load_flash_end - load_flash) > (($100 / 2) - 1))
                    .warning "More than 127 words (254 bytes) of flash used by data to be loaded in SRAM! "
                .endif
loaddone:
